<?xml version="1.0" encoding="utf-8"?>
<mx:Application 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute"
	width="800" 
	height="600"
	frameRate="100"
	creationComplete="creationComplete()"
	enterFrame="enterFrame(event)"
	click="click(event)"
	mouseDown="mouseDown(event)"
	mouseUp="mouseUp(event)"
	mouseMove="mouseMove(event)"
	currentState="Game">
	
	<mx:states>
		<mx:State 
			name="Game"			
			enterState="enterGame(event)"
			exitState="exitGame(event)">
			
			<!--CHAT PREPARATION-->
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Canvas x="10" y="500" width="400" height="90" id="chatCanvas"
						   backgroundColor="0x6666DD" borderColor="0x4444CC" borderVisible="true"
						   borderStyle="solid" />
			</mx:AddChild>
			
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
			<mx:Label x="10" y="500" text="Hello! how r u today?" fontSize="15" color="0xFF3333" id="testLabel"/>
			</mx:AddChild>
			
			
		</mx:State>
	</mx:states>
	
	<mx:Canvas x="0" y="0" width="100%" height="100%" id="myCanvas" />
	
	
	
	<mx:Script>
		<![CDATA[  
			import com.adobe.serialization.json.JSON;
			
			import flash.external.*;

			public function myFunc(s:String):void {
				testLabel.text=s;
			}
				
			protected var inGame:Boolean = false;
			protected var currentLevel:int = 1;

			public function creationComplete():void
			{
				//flash init goes here 
				
				
				//function registartion for JS call
				ExternalInterface.addCallback("myFlexFunction",myFunc);	
				ExternalInterface.addCallback("sync_Model",sync_Model);
			}
			public function sync_Model(newModelObj:String):void
			{
				//var newModelStr:String=JSON.decode(newModelObj) as String;
				testLabel.text+="new model recieved "+newModelObj;
				
			}
			public function enterFrame(event:Event):void
			{
				if (inGame)
				{
					GameObjectManager.Instance.enterFrame();
					
					myCanvas.graphics.clear();
					myCanvas.graphics.beginBitmapFill(GameObjectManager.Instance.backBuffer, null, false, false);
					myCanvas.graphics.drawRect(0, 0, this.width, this.height);
					myCanvas.graphics.endFill();
				}	
			}
			
			private function click(event:MouseEvent):void
			{
				GameObjectManager.Instance.click(event);
			}
			
			private function mouseDown(event:MouseEvent):void
			{
				GameObjectManager.Instance.mouseDown(event);
			}
			
			private function mouseUp(event:MouseEvent):void
			{
				GameObjectManager.Instance.mouseUp(event);
			}
			
			private function mouseMove(event:MouseEvent):void
			{
				GameObjectManager.Instance.mouseMove(event);
			} 	  
			
			protected function enterGame(event:Event):void
			{
				//Mouse.hide();
				GameObjectManager.Instance.startup();
				LevelDefinitions.Instance.startup();
				Level.Instance.startup(currentLevel);
				inGame = true;
			}
			
			protected function exitGame(event:Event):void
			{
				Mouse.show();
				Level.Instance.shutdown();
				GameObjectManager.Instance.shutdown();
				inGame = false;
			}  
			
		]]>
	</mx:Script>
	
</mx:Application>
